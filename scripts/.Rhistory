)
district_maps <- left_join(map_df, subregion__data, by = "subregion")
district_maps <- left_join(map_df, subregion_data, by = "subregion")
district_maps$bins <- cut(
district_maps$Immunization_Percentage,
breaks =c(
0, 50, 80, 85, 90, 93, 95, 97
),
labels=c(
"0-50% ",
"Up to 80% ",
"Up to 85%",
"Up to 90%",
"Up to 93%",
"Up to 95%",
"Up to 97%"
)
)
county_plot <- ggplot(district_maps) +
geom_polygon(aes(x = long, y = lat, group = group, fill = bins)) +
scale_fill_brewer(palette = "Blues") +
coord_quickmap() +
labs(title = " % Immunizations by County 2017", fill = "Immunization Percentage") +
theme_void()
knitr::opts_chunk$set(echo = TRUE)
source("../scripts/enrollment.R")
source("../scripts/exemptions.R")
source("../scripts/counties.R")
source("../scripts/districts_by_county.R")
library(ggplot2)
library(shiny)
library(knitr)
library(plotly)
library("maps")
library("mapproj")
enrollment_perc_complete_plotly
enrollment <- mean_enrollment
vacinated <- mean_perc_vacinated
exemption_vis
county_plot
counties_plot
districts_plot
ggplotly(county_plot)
county_plot
View(district_maps)
View(map_df)
# Filter data to columns used
data <- filter(data, Reported == "Y") %>%
select(-Reported, -School_Name, -School_year, -ESD, -Grade_Levels,
-Has_kindergarten, -Has_6thGrade, -Location.1, -contains("Percent"))
# Data frame to keep track of which district is in which county
counties_districts <- select(data, School_District, County) %>%
distinct(School_District, .keep_all = TRUE)
# Districts statistics (data frame and plots)
districts_data <- select(data, -School_District, -County) %>%
aggregate(list(data$School_District), sum) %>%
mutate(Immunization_Percentage = (Number_complete_for_all_immunizations/K_12_enrollment) * 100)
colnames(districts_data)[1] <- "School_District"
districts_data <- inner_join(districts_data, counties_districts, by = "School_District")
districts_in_counties <- split(districts_data, districts_data$County)
districts_data <- rename(districts_data, subregion = County)
i <- 1
plot_list <- list()
while(i <= length(districts_in_counties)){
df <- data.frame(districts_in_counties[[i]])
plot_list[[i]] <- df
i <- i + 1
}
districts_plot <- lapply(plot_list, function(x){
ggplot(x) +
geom_bar(mapping = aes(x = School_District, y = Immunization_Percentage, fill = School_District),
stat = "identity", show.legend = FALSE) +
geom_text(mapping = aes(x = School_District, y = Immunization_Percentage,
label = signif(Immunization_Percentage, digits = 4)), size = 3) +
labs(x = "School District", y = "Immunization Rate") +
coord_flip() +
facet_wrap(~County)
}
)
# -------------- map of counties --------------
map_df <- map_data("county") %>%
filter(region == "washington") %>%
mutate(subregion = toupper(subregion))
subregion_data <- districts_data %>%
group_by(subregion) %>%
summarize(Immunization_Percentage =
sum(as.integer(Number_complete_for_all_immunizations))/sum(as.integer(K_12_enrollment))*100,
K_12_enrollment = sum(as.integer(K_12_enrollment)),
)
county_maps <- left_join(map_df, subregion_data, by = "subregion")
county_maps$bins <- cut(
district_maps$Immunization_Percentage,
breaks =c(
0, 50, 80, 85, 90, 93, 95, 100
),
labels=c(
"0-50% ",
"50-80% ",
"80-85%",
"85-90%",
"90-93%",
"93-95%",
"95-100"
)
)
county_plot <- ggplot(county_maps) +
geom_polygon(aes(x = long, y = lat, group = group, fill = bins)) +
scale_fill_brewer(palette = "Blues") +
coord_quickmap() +
labs(title = " % Immunizations by County 2017", fill = "Immunization Percentage") +
theme_void()
county_plot
#install.packages("maps")
#install.packages("mapproj")
install.packages("plotly")
install.packages("plotly")
fig<- plot_geo(wa)
#install.packages("maps")
#install.packages("mapproj")
#install.packages("plotly")
install.packages(sf)
#install.packages("maps")
#install.packages("mapproj")
#install.packages("plotly")
install.packages("sf")
library(sf)
fig<- plot_geo(wa)
fig
fig
fig <- plot_geo(wa)
plot_ly(county_plot)
plot_ly(county_plot)
ggplotly(county_plot)
plotly(
washington,
)
#install.packages("maps")
#install.packages("mapproj")
#install.packages("plotly")
install.packages("rjson")
library(rjson)
#------------------- interactive map part 2
url <- 'https://raw.githubusercontent.com/plotly/datasets/master/geojson-counties-fips.json'
counties <- rjson::fromJSON(file=url)
url2<- "https://raw.githubusercontent.com/plotly/datasets/master/fips-unemp-16.csv"
df <- read.csv(url2, colClasses=c(fips="character"))
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
fig <- plot_ly()
fig <- fig %>% add_trace(
type="choropleth",
geojson=counties,
locations=df$fips,
z=df$unemp,
colorscale="Viridis",
zmin=0,
zmax=12,
marker=list(line=list(
width=0)
)
)
fig <- fig %>% colorbar(title = "Unemployment Rate (%)")
fig <- fig %>% layout(
title = "2016 US Unemployment by County"
)
fig <- fig %>% layout(
geo = g
)
fig
fig
View(df)
View(county_maps)
fig <- fig %>% add_trace(
type="choropleth",
geojson=counties,
locations=county_maps$Immunization_Percentage,
z=df$unemp,
colorscale="Viridis",
zmin=0,
zmax=100,
marker=list(line=list(
width=0)
)
)
fig <- fig %>% colorbar(title = "Unemployment Rate (%)")
fig <- fig %>% layout(
title = "2016 US Unemployment by County"
)
fig <- fig %>% layout(
geo = g
)
fig
fig <- fig %>% add_trace(
type="choropleth",
geojson=counties,
locations=df$fip,
z=county_maps$Immunization_Percentage,
colorscale="Viridis",
zmin=0,
zmax=100,
marker=list(line=list(
width=0)
)
)
fig <- fig %>% colorbar(title = "Unemployment Rate (%)")
fig <- fig %>% layout(
title = "2016 US Unemployment by County"
)
fig <- fig %>% layout(
geo = g
)
fig
fig <- fig %>% add_trace(
type="choropleth",
geojson=counties,
locations=county_maps$subregion,
z=county_maps$Immunization_Percentage,
colorscale="Viridis",
zmin=0,
zmax=100,
marker=list(line=list(
width=0)
)
)
fig <- fig %>% colorbar(title = "Unemployment Rate (%)")
fig <- fig %>% layout(
title = "2016 US Unemployment by County"
)
fig <- fig %>% layout(
geo = g
)
fig
data <- read.csv(
"../data/immunization_2017.csv",
stringsAsFactors = FALSE
)
# Filter data to columns used
data <- filter(data, Reported == "Y") %>%
select(-Reported, -School_Name, -School_year, -ESD, -Grade_Levels,
-Has_kindergarten, -Has_6thGrade, -Location.1, -contains("Percent"))
# Data frame to keep track of which district is in which county
counties_districts <- select(data, School_District, County) %>%
distinct(School_District, .keep_all = TRUE)
# Districts statistics (data frame and plots)
districts_data <- select(data, -School_District, -County) %>%
aggregate(list(data$School_District), sum) %>%
mutate(Immunization_Percentage = (Number_complete_for_all_immunizations/K_12_enrollment) * 100)
colnames(districts_data)[1] <- "School_District"
districts_data <- inner_join(districts_data, counties_districts, by = "School_District")
districts_in_counties <- split(districts_data, districts_data$County)
districts_data <- rename(districts_data, subregion = County)
i <- 1
plot_list <- list()
while(i <= length(districts_in_counties)){
df <- data.frame(districts_in_counties[[i]])
plot_list[[i]] <- df
i <- i + 1
}
districts_plot <- lapply(plot_list, function(x){
ggplot(x) +
geom_bar(mapping = aes(x = School_District, y = Immunization_Percentage, fill = School_District),
stat = "identity", show.legend = FALSE) +
geom_text(mapping = aes(x = School_District, y = Immunization_Percentage,
label = signif(Immunization_Percentage, digits = 4)), size = 3) +
labs(x = "School District", y = "Immunization Rate") +
coord_flip() +
facet_wrap(~County)
}
)
# -------------- map of counties --------------
map_df <- map_data("county") %>%
filter(region == "washington") %>%
mutate(subregion = toupper(subregion))
subregion_data <- districts_data %>%
group_by(subregion) %>%
summarize(Immunization_Percentage =
sum(as.integer(Number_complete_for_all_immunizations))/sum(as.integer(K_12_enrollment))*100,
K_12_enrollment = sum(as.integer(K_12_enrollment)),
)
county_maps <- left_join(map_df, subregion_data, by = "subregion")
county_maps$bins <- cut(
district_maps$Immunization_Percentage,
breaks =c(
0, 50, 80, 85, 90, 93, 95, 100
),
labels=c(
"0-50% ",
"50-80% ",
"80-85%",
"85-90%",
"90-93%",
"93-95%",
"95-100"
)
)
county_plot <- ggplot(county_maps) +
geom_polygon(aes(x = long, y = lat, group = group, fill = bins)) +
scale_fill_brewer(palette = "Blues") +
coord_quickmap() +
labs(title = " % Immunizations by County 2017", fill = "Immunization Percentage") +
theme_void()
county_plot
#------------------- interactive map part 2
county_maps$hover <- with(county_maps, paste(subregion, '<br>',
"% Vaccinated", Immunization_Percentage, "K-12 enrollement", K_12_enrollment))
fig <- plot_geo(county_maps, locationmode='USA-states')
fig
county_plot
d
d
d
d
data <- read.csv(
"../data/immunization_2017.csv",
stringsAsFactors = FALSE
)
# Filter data to columns used
data <- filter(data, Reported == "Y") %>%
select(-Reported, -School_Name, -School_year, -ESD, -Grade_Levels,
-Has_kindergarten, -Has_6thGrade, -Location.1, -contains("Percent"))
# Data frame to keep track of which district is in which county
counties_districts <- select(data, School_District, County) %>%
distinct(School_District, .keep_all = TRUE)
# Districts statistics (data frame and plots)
districts_data <- select(data, -School_District, -County) %>%
aggregate(list(data$School_District), sum) %>%
mutate(Immunization_Percentage = (Number_complete_for_all_immunizations/K_12_enrollment) * 100)
colnames(districts_data)[1] <- "School_District"
districts_data <- inner_join(districts_data, counties_districts, by = "School_District")
districts_in_counties <- split(districts_data, districts_data$County)
districts_data <- rename(districts_data, subregion = County)
i <- 1
plot_list <- list()
while(i <= length(districts_in_counties)){
df <- data.frame(districts_in_counties[[i]])
plot_list[[i]] <- df
i <- i + 1
}
districts_plot <- lapply(plot_list, function(x){
ggplot(x) +
geom_bar(mapping = aes(x = School_District, y = Immunization_Percentage, fill = School_District),
stat = "identity", show.legend = FALSE) +
geom_text(mapping = aes(x = School_District, y = Immunization_Percentage,
label = signif(Immunization_Percentage, digits = 4)), size = 3) +
labs(x = "School District", y = "Immunization Rate") +
coord_flip() +
facet_wrap(~County)
}
)
# -------------- map of counties --------------
map_df <- map_data("county") %>%
filter(region == "washington") %>%
mutate(subregion = toupper(subregion))
subregion_data <- districts_data %>%
group_by(subregion) %>%
summarize(Immunization_Percentage =
sum(as.integer(Number_complete_for_all_immunizations))/sum(as.integer(K_12_enrollment))*100,
K_12_enrollment = sum(as.integer(K_12_enrollment)),
)
county_maps <- left_join(map_df, subregion_data, by = "subregion")
county_maps$bins <- cut(
district_maps$Immunization_Percentage,
breaks =c(
0, 50, 80, 85, 90, 93, 95, 100
),
labels=c(
"0-50% ",
"50-80% ",
"80-85%",
"85-90%",
"90-93%",
"93-95%",
"95-100"
)
)
county_plot <- ggplot(county_maps) +
geom_polygon(aes(x = long, y = lat, group = group, fill = bins)) +
scale_fill_brewer(palette = "Blues") +
coord_quickmap() +
labs(title = " % Immunizations by County 2017", fill = "Immunization Percentage") +
theme_void()
county_plot
county_maps$bins <- cut(
district_maps$Immunization_Percentage,
breaks =c(
0, 50, 80, 85, 90, 93, 95, 100
),
labels=c(
"0-50% ",
"50-80% ",
"80-85%",
"85-90%",
"90-93%",
"93-95%",
"95-100"
)
)
county_maps$bins <- cut(
county_maps$Immunization_Percentage,
breaks =c(
0, 50, 80, 85, 90, 93, 95, 100
),
labels=c(
"0-50% ",
"50-80% ",
"80-85%",
"85-90%",
"90-93%",
"93-95%",
"95-100"
)
)
county_plot <- ggplot(county_maps) +
geom_polygon(aes(x = long, y = lat, group = group, fill = bins)) +
scale_fill_brewer(palette = "Blues") +
coord_quickmap() +
labs(title = " % Immunizations by County 2017", fill = "Immunization Percentage") +
theme_void()
county_plot
ggplotly(county_plot)
ggplotly(county_plot) %>%
highlight(
"plotly_hover",
selected = attrs_selected(line = list(color = "black"))
)
ggplotly(county_plot) %>%
highlight(
)
ggplotly(county_plot) %>%
highlight(
)
ggplotly(county_plot) %>%
hovertemplate = paste(
"<b>%{text}</b><br><br>",
"%{yaxis.title.text}: %{y:$,.0f}<br>",
"%{xaxis.title.text}: %{x:.0%}<br>",
"Number Employed: %{marker.size:,}",
"<extra></extra>"
))
ggplotly(county_plot) %>%
hovertemplate = paste(
"<b>%{text}</b><br><br>",
"%{yaxis.title.text}: %{y:$,.0f}<br>",
"%{xaxis.title.text}: %{x:.0%}<br>",
"Number Employed: %{marker.size:,}",
"<extra></extra>"
)
ggplotly(county_plot) %>%
hovertemplate = paste(
"<b>%{text}</b><br><br>",
"%{yaxis.title.text}: %{y:$,.0f}<br>",
"%{xaxis.title.text}: %{x:.0%}<br>",
"Immunization Rate: %{Immunization_Percentage:,}",
"<extra></extra>"
)
county_plot <-  county_plot %>%
plotly(
hovertemplate = paste(
"<b>%{text}</b><br><br>",
"%{yaxis.title.text}: %{y:$,.0f}<br>",
"%{xaxis.title.text}: %{x:.0%}<br>",
"Immunization Rate: %{Immunization_Percentage:,}",
"<extra></extra>"
))
county_plot <- ggplot(county_maps) +
geom_polygon(aes(x = long, y = lat, group = group, fill = bins)) +
scale_fill_brewer(palette = "Blues") +
coord_quickmap() +
labs(title = " % Immunizations by County 2017", fill = "Immunization Percentage") +
theme_void()
county_plot <-  county_plot %>%
plotly(
hovertemplate = paste(
"<b>%{text}</b><br><br>",
"Immunization Rate: %{Immunization_Percentage:,}",
"<extra></extra>"
))
county_plot <-  county_maps %>%
plotly(
hovertemplate = paste(
"<b>%{text}</b><br><br>",
"Immunization Rate: %{Immunization_Percentage:,}",
"<extra></extra>"
))
ggplotly(county_plot, tooltip = "subregion")
plot_ly(data = county_maps,
hoverinfo = 'text',
text = ~paste(subregion,
'</br></br>', Immunization_Percentage)))
plot_ly(data = county_maps,
hoverinfo = 'text',
text = ~paste(subregion,
'</br></br>', Immunization_Percentage))
plot_ly(data = county_plot,
hoverinfo = 'text',
text = ~paste(subregion,
'</br></br>', Immunization_Percentage))
plot_ly(data = county_maps,
hoverinfo = 'text',
text = ~paste(subregion,
'</br></br>', Immunization_Percentage))
plot_ly(data = county_maps,
)
plot_ly(data = county_maps )
plot_ly(country_plot)
plot_ly(country_plot)
ggplotly(county_plot)
ggplotly(county_maps)
