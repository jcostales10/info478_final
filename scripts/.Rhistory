)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$dcm <- renderPlot({
if (input$stayhome == TRUE) {
stayhome <- 0
} else {
stayhome <- 1
}
if (input$mask == TRUE) {
mask <- 0.05
} else {
mask <- 1
}
param <- param.dcm(inf.prob = mask, act.rate = stayhome, rec.rate = 1/20)
#a.rate = 1/95, ds.rate = 1/100, di.rate = 1/80, dr.rate = 1/100)
init <- init.dcm(s.num = 1000, i.num = 1, r.num = 0)
control <- control.dcm(type = "SIR", nsteps = 500, dt = 0.5)
mod <- dcm(param, init, control)
# par(mar = c(3.2, 3, 2, 1), mgp = c(2, 1, 0), mfrow = c(1, 2))
plot(mod, popfrac = FALSE, alpha = 0.5,
lwd = 4, main = "Compartment Sizes")
})
}
# Run the application
shinyApp(ui = ui, server = server)
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
library(shiny)
library(tidyverse)
library(EpiModel)
# DCM page
dcm_page <- tabPanel(
title = "Deterministic Model",
titlePanel("Deterministic Model"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
# Toggle for staying at home
checkboxInput(
inputId = "stayhome",
label = "Enforce Stay at Home order",
value = TRUE
),
# Toggle for wearing mask
checkboxInput(
inputId = "mask",
label = "Enforce wearing a N-95 mask",
value = TRUE
),
checkboxInput(
inputId = "social_distance",
label = "Enforce social distancing (6 ft)",
value = TRUE
),
checkboxInput(
inputId = "handwash",
label = "Diligent handwashing",
value = TRUE
)
),
# Toggle or slider for social distancing ??
# Toggle for handwashing
# Show a plot of the generated distribution
mainPanel(
plotOutput(outputId = "distPlot"),
plotOutput(outputId = "dcm")
)
)
)
#ICM Page
icm_page <- tabPanel(
title = "Individual Contact Model",
titlePanel("Individual Contact Model")
)
#Analysis Page
analysis_page <- tabPanel(
title = "Analysis",
titlePanel("Analysis")
)
ui <- navbarPage(
title = "Interactive Disease Modeling Simulation of COVID-19 Pandemic",
dcm_page,
icm_page,
analysis_page
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$dcm <- renderPlot({
if (input$stayhome == TRUE) {
stayhome <- 0
} else {
stayhome <- 0.5
}
if (input$mask == TRUE) {
mask <- 0.05
} else {
mask <- 1
}
param <- param.dcm(inf.prob = 0.3, act.rate = stayhome, rec.rate = 1/20)
#a.rate = 1/95, ds.rate = 1/100, di.rate = 1/80, dr.rate = 1/100)
init <- init.dcm(s.num = 1000, i.num = 1, r.num = 0)
control <- control.dcm(type = "SIR", nsteps = 500, dt = 0.5)
mod <- dcm(param, init, control)
# par(mar = c(3.2, 3, 2, 1), mgp = c(2, 1, 0), mfrow = c(1, 2))
plot(mod, popfrac = FALSE, alpha = 0.5,
lwd = 4, main = "Compartment Sizes")
})
}
# Run the application
shinyApp(ui = ui, server = server)
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
library(shiny)
library(tidyverse)
library(EpiModel)
# DCM page
dcm_page <- tabPanel(
title = "Deterministic Model",
titlePanel("Deterministic Model"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
# act.rate
radioButtons(
inputId = "individual_interventions",
label = h3("Individual Safety Practices"),
choices = list(
"Wear a N-95 Mask" = 0.05,
"Diligent handwashing" = 0.63
)
),
# inf.prob
radioButtons(
inputId = "laws",
label = h3("Levels of Distancing"),
choices = list(
"No mandatory distancing" = 1,
"Mandatory social distancing (6 ft)" = 0.8,
"Mandatory stay at home" = 0
)
),
# nsteps
sliderInput(
inputId = "num_days",
label = "Number of days recorded",
min = 0,
max = 500,
value = 100
)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput(outputId = "dcm")
)
)
)
#ICM Page
icm_page <- tabPanel(
title = "Individual Contact Model",
titlePanel("Individual Contact Model")
)
#Analysis Page
analysis_page <- tabPanel(
title = "Analysis",
titlePanel("Analysis")
)
ui <- navbarPage(
title = "Interactive Disease Modeling Simulation of COVID-19 Pandemic",
dcm_page,
icm_page,
analysis_page
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$dcm <- renderPlot({
# set parameters
param <- param.dcm(inf.prob = as.numeric(input$laws),
act.rate = as.numeric(input$individual_interventions),
rec.rate = 1/20)
init <- init.dcm(s.num = 1000, i.num = 1, r.num = 0)
control <- control.dcm(type = "SIR", nsteps = num_days, dt = 0.5)
mod <- dcm(param, init, control)
plot(mod, popfrac = FALSE, alpha = 0.5,
lwd = 4, main = "Compartment Sizes")
})
}
# Run the application
shinyApp(ui = ui, server = server)
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
runApp('Documents/UW/Junior/INFO 478/a2-azimkl/disease_modeling')
install.packages("plotly")
setwd("~/Documents/UW/Junior/INFO 478/info478_final/scripts")
setwd("~/Documents/UW/Junior/INFO 478/info478_final")
library(tidyverse)
vac_2017 <- read.csv("../data/immunization_2017.csv", stringsAsFactors = F)
setwd("~/Documents/UW/Junior/INFO 478/info478_final/scripts")
vac_2017 <- read.csv("../data/immunization_2017.csv", stringsAsFactors = F)
View(vac_2017)
reported_only <- vac_2017 %>%
filter(Reported == "Y") %>%
select(School_Name, K_12_enrollment, Percent_complete_for_all_immunizations)
View(vac_2017)
reported_only <- vac_2017 %>%
filter(Reported == "Y") %>%
select(School_Name, Percent_with_any_exemption, Percent_with_medical_exemption,
Percent_with_religious_exemption, Percent_with_religious_membership_exemption)
View(reported_only)
exemption_summary <- reported_only %>%
group_by(School_Name)
View(exemption_summary)
View(vac_2017)
exemption_summary <- reported_only %>%
group_by(School_Name) %>%
summarize(
mean_any_exemption = mean(Percent_with_any_exemption),
mean_medical_exemption = mean(Percent_with_medical_exemption),
mean_religious_exemption = mean(Percent_with_religious_exemption),
mean_religious_membership_exemption = mean(Percent_with_religious_membership_exemption)
)
View(exemption_summary)
View(reported_only)
exemption_summary <- reported_only %>%
summarize(
mean_any_exemption = mean(Percent_with_any_exemption),
mean_medical_exemption = mean(Percent_with_medical_exemption),
mean_religious_exemption = mean(Percent_with_religious_exemption),
mean_religious_membership_exemption = mean(Percent_with_religious_membership_exemption)
)
exemption_summary <- reported_only %>%
group_by(School_Name) %>%
summarize(
mean_any_exemption = mean(Percent_with_any_exemption),
mean_medical_exemption = mean(Percent_with_medical_exemption),
mean_religious_exemption = mean(Percent_with_religious_exemption),
mean_religious_membership_exemption = mean(Percent_with_religious_membership_exemption)
)
exemption_summary <- reported_only %>%
summarize(
mean_any_exemption = mean(Percent_with_any_exemption),
mean_medical_exemption = mean(Percent_with_medical_exemption),
mean_religious_exemption = mean(Percent_with_religious_exemption),
mean_religious_membership_exemption = mean(Percent_with_religious_membership_exemption)
)
exemption_plot <- ggplot(data = exemption_summary) +
geom_histogram(mapping = aes(x = c(mean_any_exemption)))
exemption_plot
View(reported_only)
View(vac_2017)
reported_only <- vac_2017 %>%
filter(Reported == "Y") %>%
select(School_Name, Percent_with_any_exemption, Number_with_any_exemption,
Number_with_medical_exemption, Number_with_personal_exemption,
Number_with_religious_exemption, Number_with_religious_membership_exemption)
View(reported_only)
reported_only <- vac_2017 %>%
filter(Reported == "Y") %>%
select(School_Name, Number_with_any_exemption, Number_with_medical_exemption,
Number_with_personal_exemption, Number_with_religious_exemption,
Number_with_religious_membership_exemption)
exemption_summary <- reported_only %>%
summarize(
count_any_exemption = sum(Number_with_any_exemption),
count_medical_exemption = sum(Number_with_medical_exemption),
count_personal_exemption = sum(Number_with_personal_exemption),
count_religious_exemption = sum(Number_with_religious_exemption),
count_religious_membership_exemption = sum(Number_with_religious_membership_exemption)
)
View(exemption_summary)
exemption_pivoted <- exemption_summary
pivot_longer(names_to = "reasons", values_to = "count")
View(exemption_pivoted)
exemption_summary <- reported_only %>%
group_by(School_Name) %>%
summarize(
count_any_exemption = sum(Number_with_any_exemption),
count_medical_exemption = sum(Number_with_medical_exemption),
count_personal_exemption = sum(Number_with_personal_exemption),
count_religious_exemption = sum(Number_with_religious_exemption),
count_religious_membership_exemption = sum(Number_with_religious_membership_exemption)
)
exemption_pivoted <- exemption_summary
pivot_longer(-School_name, names_to = "reasons", values_to = "count")
exemption_summary <- reported_only %>%
group_by(School_Name) %>%
summarize(
count_any_exemption = sum(Number_with_any_exemption),
count_medical_exemption = sum(Number_with_medical_exemption),
count_personal_exemption = sum(Number_with_personal_exemption),
count_religious_exemption = sum(Number_with_religious_exemption),
count_religious_membership_exemption = sum(Number_with_religious_membership_exemption)
)
exemption_pivoted <- exemption_summary %>%
pivot_longer(School_name, names_to = "reasons", values_to = "count")
exemption_pivoted <- exemption_summary %>%
pivot_longer(names_to = "reasons", values_to = "count")
exemption_pivoted <- exemption_summary %>%
pivot_longer(School_Name, names_to = "reasons", values_to = "count")
View(exemption_pivoted)
exemption_summary <- reported_only %>%
group_by(School_Name) %>%
summarize(
count_any_exemption = sum(Number_with_any_exemption),
count_medical_exemption = sum(Number_with_medical_exemption),
count_personal_exemption = sum(Number_with_personal_exemption),
count_religious_exemption = sum(Number_with_religious_exemption),
count_religious_membership_exemption = sum(Number_with_religious_membership_exemption)
)
exemption_summary <- reported_only %>%
summarize(
count_any_exemption = sum(Number_with_any_exemption),
count_medical_exemption = sum(Number_with_medical_exemption),
count_personal_exemption = sum(Number_with_personal_exemption),
count_religious_exemption = sum(Number_with_religious_exemption),
count_religious_membership_exemption = sum(Number_with_religious_membership_exemption)
)
exemption_pivotted <- exemption_summary %>%
pivot_longer(names_to = "exemptions", values_to = "count")
exemption_pivotted <- exemption_summary %>%
pivot_longer(count_any_exemption ,names_to = "exemptions", values_to = "count")
View(exemption_pivotted)
pivotted_data <- exemption_summary %>%
gather(key = "reasons", value = "count_any_exemption",
"count_personal_exemption")
View(pivotted_data)
pivotted_data <- exemption_summary %>%
gather(key = "reasons", value = c("count_any_exemption",
"count_personal_exemption"))
pivotted_data <- exemption_summary %>%
gather(key = "reasons", value = "count_any_exemption",
"count_personal_exemption", "count_medical_exemption")
pivotted_data <- exemption_summary %>%
gather(key = "reasons", value = "count",
"count_personal_exemption", "count_medical_exemption")
pivotted_data <- exemption_summary %>%
gather(key = "reasons", value = "count", "count_any_exemption",
"count_personal_exemption", "count_medical_exemption",
"count_religious_exemption", "count_religious_membership_exemption")
take_two <- exemption_summary %>%
pivot_longer("reasons", names_to = "reasons", values_to = "count")
library(tidyverse)
vac_2017 <- read.csv("../data/immunization_2017.csv", stringsAsFactors = F)
# Question
#Which exemptions are the highest/lowest? (Azim)
#Medical vs personal vs religious
#Bar graph?
# filter out all the schools not reported and keep necessary columns
reported_only <- vac_2017 %>%
filter(Reported == "Y") %>%
select(School_Name, Number_with_any_exemption, Number_with_medical_exemption,
Number_with_personal_exemption, Number_with_religious_exemption,
Number_with_religious_membership_exemption)
# calculate sum of exemptions
exemption_sums <- reported_only %>%
summarize(
count_any_exemption = sum(Number_with_any_exemption),
count_medical_exemption = sum(Number_with_medical_exemption),
count_personal_exemption = sum(Number_with_personal_exemption),
count_religious_exemption = sum(Number_with_religious_exemption),
count_religious_membership_exemption = sum(Number_with_religious_membership_exemption)
)
exemption_summary <- exemption_sums %>%
gather(key = "reasons", value = "count", "count_any_exemption",
"count_personal_exemption", "count_medical_exemption",
"count_religious_exemption", "count_religious_membership_exemption")
View(exemption_sums)
View(exemption_summary)
exemption_summary <- exemption_sums %>%
gather(key = "reasons", value = "count", "count_any_exemption",
"count_personal_exemption", "count_medical_exemption",
"count_religious_exemption", "count_religious_membership_exemption") %>%
rename("Any Exemption" = count_any_exemption)
exemption_sums <- reported_only %>%
summarize(
count_any_exemption = sum(Number_with_any_exemption),
count_medical_exemption = sum(Number_with_medical_exemption),
count_personal_exemption = sum(Number_with_personal_exemption),
count_religious_exemption = sum(Number_with_religious_exemption),
count_religious_membership_exemption = sum(Number_with_religious_membership_exemption)
) %>%
rename("Any Exemption" = count_any_exemption)
View(exemption_summary)
View(exemption_sums)
library(tidyverse)
vac_2017 <- read.csv("../data/immunization_2017.csv", stringsAsFactors = F)
# Question
#Which exemptions are the highest/lowest? (Azim)
#Medical vs personal vs religious
#Bar graph?
# filter out all the schools not reported and keep necessary columns
reported_only <- vac_2017 %>%
filter(Reported == "Y") %>%
select(School_Name, Number_with_any_exemption, Number_with_medical_exemption,
Number_with_personal_exemption, Number_with_religious_exemption,
Number_with_religious_membership_exemption)
# calculate sum of exemptions and rename columns
exemption_sums <- reported_only %>%
summarize(
count_any_exemption = sum(Number_with_any_exemption),
count_medical_exemption = sum(Number_with_medical_exemption),
count_personal_exemption = sum(Number_with_personal_exemption),
count_religious_exemption = sum(Number_with_religious_exemption),
count_religious_membership_exemption = sum(Number_with_religious_membership_exemption)
) %>%
rename("Any exemption" = count_any_exemption) %>%
rename("Personal exemption" = count_personal_exemption) %>%
rename("Medical exemption" = count_medical_exemption) %>%
rename("Religious exemption" = count_religious_exemption) %>%
rename("Religious membership exemption" = count_religious_membership_exemption)
exemption_summary <- exemption_sums %>%
gather(key = "reasons", value = "count", "count_any_exemption",
"count_personal_exemption", "count_medical_exemption",
View(exemption_sums)
source('~/Documents/UW/Junior/INFO 478/info478_final/scripts/exemptions.R')
exemption_sums <- reported_only %>%
summarize(
count_any_exemption = sum(Number_with_any_exemption),
count_medical_exemption = sum(Number_with_medical_exemption),
count_personal_exemption = sum(Number_with_personal_exemption),
count_religious_exemption = sum(Number_with_religious_exemption),
count_religious_membership_exemption = sum(Number_with_religious_membership_exemption)
) %>%
rename("Any exemption" = count_any_exemption) %>%
rename("Personal exemption" = count_personal_exemption) %>%
rename("Medical exemption" = count_medical_exemption) %>%
rename("Religious exemption" = count_religious_exemption) %>%
rename("Religious membership exemption" = count_religious_membership_exemption)
View(exemption_sums)
exemption_summary <- exemption_sums %>%
gather(key = "reasons", value = "count", "count_any_exemption",
"count_personal_exemption", "count_medical_exemption",
"count_religious_exemption", "count_religious_membership_exemption")
exemption_summary <- exemption_sums %>%
gather(key = "reasons", value = "count", "Any exemption",
"Personal exemption", "Medical exemption",
"Religious exemption", "Religious membership exemption")
View(exemption_sums)
View(exemption_summary)
exemption_vis <- ggplot(data = exemption_summary) +
geom_col(mapping = aes(x = reasons, y = count))
exemption_vis
View(exemption_sums)
# organized exemption_sums to make it easy to work with
exemption_summary <- exemption_sums %>%
gather(key = "reasons", value = "count", "Any exemption",
"Personal exemption", "Medical exemption",
"Religious exemption", "Religious membership exemption") %>%
arrange(-count)
exemption_vis <- ggplot(data = exemption_summary) +
geom_col(mapping = aes(x = reasons, y = count))
exemption_vis
library(tidyverse)
vac_2017 <- read.csv("../data/immunization_2017.csv", stringsAsFactors = F)
# Question
#Which exemptions are the highest/lowest? (Azim)
#Medical vs personal vs religious
#Bar graph?
# filter out all the schools not reported and keep necessary columns
reported_only <- vac_2017 %>%
filter(Reported == "Y") %>%
select(School_Name, Number_with_any_exemption, Number_with_medical_exemption,
Number_with_personal_exemption, Number_with_religious_exemption,
Number_with_religious_membership_exemption)
# calculate sum of exemptions and rename columns
exemption_sums <- reported_only %>%
summarize(
count_any_exemption = sum(Number_with_any_exemption),
count_medical_exemption = sum(Number_with_medical_exemption),
count_personal_exemption = sum(Number_with_personal_exemption),
count_religious_exemption = sum(Number_with_religious_exemption),
count_religious_membership_exemption = sum(Number_with_religious_membership_exemption)
) %>%
rename("Any exemption" = count_any_exemption) %>%
rename("Personal exemption" = count_personal_exemption) %>%
rename("Medical exemption" = count_medical_exemption) %>%
rename("Religious exemption" = count_religious_exemption) %>%
rename("Religious membership exemption" = count_religious_membership_exemption)
# organized exemption_sums to make it easy to work with
exemption_summary <- exemption_sums %>%
gather(key = "reasons", value = "count", "Any exemption",
"Personal exemption", "Medical exemption",
"Religious exemption", "Religious membership exemption") %>%
arrange(-count)
exemption_vis <- ggplot(data = exemption_summary) +
geom_col(mapping = aes(x = reasons, y = count)) +
labs(title = "Exemption Count", x = "Reasons", y = "Number of People")
exemption_vis
exemption_vis <- ggplot(data = exemption_summary) +
geom_col(mapping = aes(x = reorder(reasons, count), y = count)) +
labs(title = "Exemption Count", x = "Reasons", y = "Number of People")
exemption_vis
exemption_vis <- ggplot(data = exemption_summary) +
geom_col(mapping = aes(x = reorder(reasons, -count), y = count)) +
labs(title = "Exemption Count", x = "Reasons", y = "Number of People")
exemption_vis
